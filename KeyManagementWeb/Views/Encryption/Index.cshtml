@{
    ViewData["Title"] = "Encryption";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Key Management System - Encryption</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            min-height: 100vh;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
            transition: background-color 0.3s ease;
        }

        .card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .dark-mode {
            background-color: #1e1e2d;
            color: #ffffff;
        }

            .dark-mode .card {
                background-color: #2b2b40;
                box-shadow: 0 0 20px rgba(0,0,0,0.2);
            }

            .dark-mode .form-control {
                background-color: #1e1e2d;
                border-color: #323248;
                color: #ffffff;
            }

            .dark-mode .form-select {
                background-color: #1e1e2d;
                border-color: #323248;
                color: #ffffff;
            }

            .dark-mode .form-label {
                color: #ffffff;
            }

            .dark-mode .card-header h3 {
                color: #ffffff;
            }

            .dark-mode textarea::placeholder,
            .dark-mode input::placeholder {
                color: #6d6d80;
            }

            .dark-mode .alert-success {
                background-color: #1a392b;
                border-color: #28a745;
                color: #ffffff;
            }

                .dark-mode .alert-success .form-control,
                .dark-mode .alert-success textarea {
                    background-color: #1e1e2d;
                    border-color: #28a745;
                    color: #ffffff;
                }

            .dark-mode .btn-outline-success {
                color: #28a745;
                border-color: #28a745;
            }

                .dark-mode .btn-outline-success:hover {
                    background-color: #28a745;
                    color: #ffffff;
                }

        .navbar {
            background-color: #1e1e2d;
            padding: 1rem;
            margin-bottom: 2rem;
        }

        .navbar-brand {
            color: #ffffff;
            font-size: 1.25rem;
            font-weight: 600;
            text-decoration: none;
        }

        .nav-link {
            color: #b5b5c3;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

            .nav-link:hover, .nav-link.active {
                color: #ffffff;
                background-color: #2b2b40;
            }

            .nav-link i {
                margin-right: 0.5rem;
            }

        .user-info {
            color: #b5b5c3;
            font-size: 0.875rem;
        }

            .user-info i {
                margin-right: 0.5rem;
            }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        .card-header {
            background-color: transparent;
            border-bottom: 1px solid #323248;
            padding: 1.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .btn-primary {
            background-color: #3699ff;
            border-color: #3699ff;
        }

            .btn-primary:hover {
                background-color: #187de4;
                border-color: #187de4;
            }
    </style>
</head>
<body class="dark-mode">
    <nav class="navbar">
        <div class="container d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <a class="navbar-brand" href="#">
                    <i class="fas fa-shield-alt me-2"></i>Key Management System
                </a>
                @if (User.Identity?.IsAuthenticated == true && User.Identity.Name != "admin")
                {
                    <div class="ms-4">
                        <a class="nav-link" href="@Url.Action("Index", "Home")">
                            <i class="fas fa-key"></i>KMS
                        </a>
                    </div>
                    <div class="ms-2">
                        <a class="nav-link" href="@Url.Action("Index", "Decryption")">
                            <i class="fas fa-unlock"></i>Decryption
                        </a>
                    </div>
                    <div class="ms-2">
                        <a class="nav-link active" href="@Url.Action("Index", "Encryption")">
                            <i class="fas fa-lock"></i>Encryption
                        </a>
                    </div>
                }
            </div>
            <div class="d-flex align-items-center">
                <div class="theme-switch me-4">
                    <button id="themeToggle" class="btn btn-outline-light">
                        <i class="fas fa-moon"></i>
                    </button>
                </div>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="user-info me-3">
                        <i class="fas fa-user-circle"></i>@User.Identity.Name
                    </div>
                    <a href="@Url.Action("Logout", "Account")" class="btn btn-danger btn-sm">
                        <i class="fas fa-sign-out-alt me-2"></i>Çıkış Yap
                    </a>
                }
            </div>
        </div>
    </nav>

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="text-center mb-0">
                            <i class="fas fa-lock me-2"></i>Encryption
                        </h3>
                    </div>
                    <div class="card-body">
                        <form id="encryptionForm">
                            <div class="mb-3">
                                <label for="keyType" class="form-label">Key Tipi</label>
                                <select class="form-select" id="keyType" required>
                                    <option value="AES">AES</option>
                                    <option value="DES">DES</option>
                                    <option value="Kazakistan">Kazakistan Encrypt</option>
                                    <option value="KazakistanBank">Kazakistan Bank Password</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="key" class="form-label">Key (Boş bırakılırsa otomatik oluşturulur)</label>
                                <input type="text" class="form-control" id="key" placeholder="Boş bırakılırsa otomatik oluşturulur">
                            </div>
                            <div class="mb-3">
                                <label for="iv" class="form-label">Initial Vector (IV) (Boş bırakılırsa otomatik oluşturulur)</label>
                                <input type="text" class="form-control" id="iv" placeholder="Boş bırakılırsa otomatik oluşturulur">
                            </div>
                            <div class="mb-3">
                                <label for="plainText" class="form-label">Metin</label>
                                <textarea class="form-control" id="plainText" rows="3" required></textarea>
                            </div>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-lock me-2"></i>Şifrele
                                </button>
                            </div>
                        </form>

                        <div id="resultSection" class="mt-4" style="display: none;">
                            <div class="alert alert-success mb-3">
                                <h5 class="alert-heading">Şifreleme Başarılı!</h5>
                                <hr>
                                <div class="mb-3" id="resultKeyContainer">
                                    <label class="form-label">Key:</label>
                                    <input type="text" class="form-control" id="resultKey" readonly>
                                </div>
                                <div class="mb-3" id="resultIVContainer">
                                    <label class="form-label">IV:</label>
                                    <input type="text" class="form-control" id="resultIV" readonly>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Şifrelenmiş Metin:</label>
                                    <textarea class="form-control" id="encryptedResult" rows="3" readonly></textarea>
                                </div>
                                <button id="copyButton" class="btn btn-outline-success">
                                    <i class="fas fa-copy me-2"></i>Tümünü Kopyala
                                </button>
                            </div>
                        </div>

                        <div id="errorSection" class="mt-4" style="display: none;">
                            <div class="alert alert-danger">
                                <h5 class="alert-heading">Hata!</h5>
                                <hr>
                                <p id="errorMessage"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Algoritma değiştiğinde alan görünürlüğünü güncelle
        document.getElementById('keyType').addEventListener('change', function() {
            const keyType = this.value;
            const keyContainer = document.getElementById('key').parentElement;
            const ivContainer = document.getElementById('iv').parentElement;
            
            if (keyType === 'Kazakistan') {
                // Kazakistan için IV gerekmez, Key opsiyonel (varsayılan: abcd.1234)
                ivContainer.style.display = 'none';
                keyContainer.style.display = 'block';
                document.getElementById('key').placeholder = 'Boş bırakılırsa varsayılan key kullanılır (abcd.1234)';
            } else if (keyType === 'KazakistanBank') {
                // Kazakistan Bank Password için Key ve IV gerekmez
                keyContainer.style.display = 'none';
                ivContainer.style.display = 'none';
            } else {
                // AES veya DES için Key ve IV göster
                keyContainer.style.display = 'block';
                ivContainer.style.display = 'block';
                document.getElementById('key').placeholder = 'Boş bırakılırsa otomatik oluşturulur';
            }
        });
        
        // Sayfa yüklendiğinde algoritma tipine göre alanları ayarla
        document.addEventListener('DOMContentLoaded', function() {
            const keyType = document.getElementById('keyType');
            // Algoritma değişim olayını tetikle
            keyType.dispatchEvent(new Event('change'));
        });

        document.getElementById('encryptionForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const request = {
                keyType: document.getElementById('keyType').value,
                key: document.getElementById('key').value,
                iv: document.getElementById('iv').value,
                plainText: document.getElementById('plainText').value
            };

            try {
                document.getElementById('resultSection').style.display = 'none';
                document.getElementById('errorSection').style.display = 'none';

                const response = await fetch('/Encryption/Encrypt', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(request)
                });

                const data = await response.json();

                if (data.success) {
                    document.getElementById('resultSection').style.display = 'block';
                    
                    // Key tipi Kazakistan Bank Password ise IV ve Key gösterme
                    if (request.keyType === 'KazakistanBank') {
                        document.getElementById('resultKeyContainer').style.display = 'none';
                        document.getElementById('resultIVContainer').style.display = 'none';
                    } else if (request.keyType === 'Kazakistan') {
                        // Kazakistan için IV gösterme
                        document.getElementById('resultKeyContainer').style.display = 'block';
                        document.getElementById('resultIVContainer').style.display = 'none';
                        document.getElementById('resultKey').value = data.key || '';
                    } else {
                        // AES veya DES için Key ve IV göster
                        document.getElementById('resultKeyContainer').style.display = 'block';
                        document.getElementById('resultIVContainer').style.display = 'block';
                        document.getElementById('resultKey').value = data.key || '';
                        document.getElementById('resultIV').value = data.iv || '';
                    }
                    
                    document.getElementById('encryptedResult').value = data.result;
                } else {
                    document.getElementById('errorMessage').textContent = data.error;
                    document.getElementById('errorSection').style.display = 'block';
                }
            } catch (error) {
                document.getElementById('errorMessage').textContent = 'Bir hata oluştu: ' + error.message;
                document.getElementById('errorSection').style.display = 'block';
            }
        });

        document.getElementById('copyButton').addEventListener('click', function() {
            const key = document.getElementById('resultKey').value;
            const iv = document.getElementById('resultIV').value;
            const encrypted = document.getElementById('encryptedResult').value;

            const textToCopy = `Key: ${key}\nIV: ${iv}\nŞifrelenmiş Metin: ${encrypted}`;

            navigator.clipboard.writeText(textToCopy)
                .then(() => {
                    const originalText = this.innerHTML;
                    this.innerHTML = '<i class="fas fa-check me-2"></i>Kopyalandı!';
                    setTimeout(() => {
                        this.innerHTML = originalText;
                    }, 2000);
                })
                .catch(err => {
                    console.error('Kopyalama hatası:', err);
                });
        });

        const themeToggle = document.getElementById('themeToggle');
        themeToggle.addEventListener('click', function() {
            document.body.classList.toggle('dark-mode');
            const icon = themeToggle.querySelector('i');
            if (document.body.classList.contains('dark-mode')) {
                icon.classList.remove('fa-sun');
                icon.classList.add('fa-moon');
            } else {
                icon.classList.remove('fa-moon');
                icon.classList.add('fa-sun');
            }
        });
    </script>
</body>
</html>
